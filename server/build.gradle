plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.0'
//	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // QueryDSL plugin 제거
}

group = 'CryptOptima'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.3'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// spring security & OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// json to object parsing
	implementation 'com.google.code.gson:gson:2.9.0'

	// jasypt Encryptor
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// QueryDSL
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
//	implementation "com.querydsl:querydsl-core:${queryDslVersion}"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'

sourceSets {
	main.java.srcDirs += "$projectDir/build/generated"
}

compileJava{
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

clean {
	delete file(querydslSrcDir)
}

// JPA 사용여부 및 사용 경로 설정
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}

// build시 사용할 sourceSet 추가 설정
//sourceSets {
//	main.java.srcDir querydslDir
//}

// querydsl 컴파일 시 사용할 옵션 설정
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}

// querydsl이 compileClassPath를 상속하도록 설정
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}
